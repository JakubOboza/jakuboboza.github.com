<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[No Fucking Idea]]></title>
  <link href="http://JakubOboza.github.com/atom.xml" rel="self"/>
  <link href="http://JakubOboza.github.com/"/>
  <updated>2012-03-26T23:21:03+01:00</updated>
  <id>http://JakubOboza.github.com/</id>
  <author>
    <name><![CDATA[Jakub Oboza]]></name>
    <email><![CDATA[jakub.oboza@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using eredis, redis with erlang]]></title>
    <link href="http://JakubOboza.github.com/blog/2012/03/23/using-eredis-in-erlang/"/>
    <updated>2012-03-23T23:28:00+00:00</updated>
    <id>http://JakubOboza.github.com/blog/2012/03/23/using-eredis-in-erlang</id>
    <content type="html"><![CDATA[<p>Recently i decided to move my blog from tumblr to octopress becasue it is just easier for me to maintain it and it looks nicer. The old blog is under <a href="http://no-fucking-idea.tumblr.com">http://no-fucking-idea.tumblr.com</a>. My first post on enw blog is dedicated to using redis with erlang.</p>

<h1>Eredis</h1>

<p>Wooga created a really nice (performance driven) redis driver for erlang. You can get it here <a href="https://github.com/wooga/eredis">https://github.com/wooga/eredis</a>. It is really easy and nice.</p>

<h1>Initial sample</h1>

<p>On project page you can find simple examples how to use eredis. Examples there are all you need (but i need something for front page of my new blog so i will rewrite them and explain them :) ).</p>

<h2>First you need to start your eredis application</h2>

<figure class='code'><figcaption><span>initialization</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Client</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">start_link</span><span class="p">().</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Client is the &#8220;connection / state&#8221; we will be using with rest of queries.</p>

<p>To query things with redis we will use <code>q</code> method from eredis module which takes &#8220;Connection / Client&#8221; state and list with params.
This api is very simple here are two most basic examples of get and set.
GET:</p>

<figure class='code'><figcaption><span>get</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="o">&lt;&lt;</span><span class="s">&quot;OK&quot;</span><span class="o">&gt;&gt;</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">q</span><span class="p">(</span><span class="nv">Client</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;SET&quot;</span><span class="p">,</span> <span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="s">&quot;kuba&quot;</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure>


<p>and SET:</p>

<figure class='code'><figcaption><span>set</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="o">&lt;&lt;</span><span class="s">&quot;kuba&quot;</span><span class="o">&gt;&gt;</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">q</span><span class="p">(</span><span class="nv">Client</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;GET&quot;</span><span class="p">,</span> <span class="s">&quot;name&quot;</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure>


<p>From my point of view this is ideal candidate to be turned into gen_server behavior. We will pass &#8220;Connection / Client&#8221; as state and also we will build some &#8220;key&#8221; serialization methods around it to make it more durable and make our life easy if we will decide to refactor it later on.</p>

<h1>Free Api wrapper</h1>

<p>First thing i saw during development using Erlang is that you get free api if you follow simple patterns and encapsulate things into gen_server&#8217;s and applications.</p>

<figure class='code'><figcaption><span>example_db.erl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">example_db</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">behaviour</span><span class="p">(</span><span class="n">gen_server</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">author</span><span class="p">(</span><span class="s">&quot;jakub.oboza@gmail.com&quot;</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">define</span><span class="p">(</span><span class="no">Prefix</span><span class="p">,</span> <span class="s">&quot;example&quot;</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">start_link</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">init</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span> <span class="n">handle_call</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span> <span class="n">handle_cast</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">terminate</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">handle_info</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">code_change</span><span class="o">/</span><span class="mi">3</span><span class="p">,</span> <span class="n">stop</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span>
</span><span class='line'><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">get_script</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span> <span class="n">save_script</span><span class="o">/</span><span class="mi">3</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="c">% public api</span>
</span><span class='line'>
</span><span class='line'><span class="nf">start_link</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">gen_server</span><span class="p">:</span><span class="n">start_link</span><span class="p">({</span><span class="n">local</span><span class="p">,</span> <span class="no">?MODULE</span><span class="p">},</span> <span class="no">?MODULE</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">init</span><span class="p">([])</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">start_link</span><span class="p">(),</span>
</span><span class='line'>  <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">stop</span><span class="p">(_</span><span class="nv">Pid</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="n">stop</span><span class="p">().</span>
</span><span class='line'>
</span><span class='line'><span class="nf">stop</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>    <span class="nn">gen_server</span><span class="p">:</span><span class="n">cast</span><span class="p">(</span><span class="no">?MODULE</span><span class="p">,</span> <span class="n">stop</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="c">%% public client api</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_script</span><span class="p">(</span><span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">gen_server</span><span class="p">:</span><span class="n">call</span><span class="p">(</span><span class="no">?MODULE</span><span class="p">,</span> <span class="p">{</span><span class="n">get_script</span><span class="p">,</span> <span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">}).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">save_script</span><span class="p">(</span><span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">,</span> <span class="nv">Script</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">gen_server</span><span class="p">:</span><span class="n">call</span><span class="p">(</span><span class="no">?MODULE</span><span class="p">,</span> <span class="p">{</span><span class="n">save_script</span><span class="p">,</span> <span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">,</span> <span class="nv">Script</span><span class="p">}).</span>
</span><span class='line'>
</span><span class='line'><span class="c">%% genserver handles</span>
</span><span class='line'>
</span><span class='line'><span class="nf">handle_call</span><span class="p">({</span><span class="n">get_script</span><span class="p">,</span> <span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">},</span> <span class="p">_</span><span class="nv">From</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Response</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">q</span><span class="p">(</span><span class="nv">Redis</span><span class="p">,</span> <span class="p">[</span> <span class="s">&quot;GET&quot;</span><span class="p">,</span> <span class="n">get_key</span><span class="p">(</span><span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">)</span> <span class="p">]),</span>
</span><span class='line'>  <span class="p">{</span><span class="n">reply</span><span class="p">,</span> <span class="nv">Response</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">handle_call</span><span class="p">({</span><span class="n">save_script</span><span class="p">,</span> <span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">,</span> <span class="nv">Script</span><span class="p">},</span> <span class="p">_</span><span class="nv">From</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Response</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">q</span><span class="p">(</span><span class="nv">Redis</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;SET&quot;</span><span class="p">,</span> <span class="n">get_key</span><span class="p">(</span><span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">),</span> <span class="nv">Script</span><span class="p">]),</span>
</span><span class='line'>  <span class="p">{</span><span class="n">reply</span><span class="p">,</span> <span class="nv">Response</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nf">handle_call</span><span class="p">(_</span><span class="nv">Message</span><span class="p">,</span> <span class="p">_</span><span class="nv">From</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">{</span><span class="n">reply</span><span class="p">,</span> <span class="n">error</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">handle_cast</span><span class="p">(_</span><span class="nv">Message</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">noreply</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">}.</span>
</span><span class='line'><span class="nf">handle_info</span><span class="p">(_</span><span class="nv">Message</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">noreply</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">}.</span>
</span><span class='line'><span class="nf">terminate</span><span class="p">(_</span><span class="nv">Reason</span><span class="p">,</span> <span class="p">_</span><span class="nv">Redis</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">ok</span><span class="p">.</span>
</span><span class='line'><span class="nf">code_change</span><span class="p">(_</span><span class="nv">OldVersion</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">,</span> <span class="p">_</span><span class="nv">Extra</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Redis</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="c">%% helper methods</span>
</span><span class='line'>
</span><span class='line'><span class="nf">get_key</span><span class="p">(</span><span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="n">generate_key</span><span class="p">([</span><span class="nv">Api</span><span class="p">,</span> <span class="nv">Method</span><span class="p">]).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">generate_key</span><span class="p">(</span><span class="nv">KeysList</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nn">lists</span><span class="p">:</span><span class="n">foldl</span><span class="p">(</span><span class="k">fun</span><span class="p">(</span><span class="nv">Key</span><span class="p">,</span> <span class="nv">Acc</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nv">Acc</span> <span class="o">++</span> <span class="s">&quot;:&quot;</span> <span class="o">++</span> <span class="nv">Key</span> <span class="k">end</span><span class="p">,</span> <span class="no">?Prefix</span><span class="p">,</span> <span class="nv">KeysList</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="c">% tests</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">ifdef</span><span class="p">(</span><span class="nv">TEST</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">include_lib</span><span class="p">(</span><span class="s">&quot;eunit/include/eunit.hrl&quot;</span><span class="p">).</span>
</span><span class='line'><span class="p">-</span><span class="ni">endif</span><span class="p">.</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">ifdef</span><span class="p">(</span><span class="nv">TEST</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">generate_key_test</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="nv">Key</span> <span class="o">=</span> <span class="n">generate_key</span><span class="p">([</span><span class="s">&quot;one&quot;</span><span class="p">,</span> <span class="s">&quot;two&quot;</span><span class="p">,</span> <span class="s">&quot;three&quot;</span><span class="p">]),</span>
</span><span class='line'>  <span class="no">?assertEqual</span><span class="p">(</span><span class="s">&quot;example:one:two:three&quot;</span><span class="p">,</span> <span class="nv">Key</span><span class="p">).</span>
</span><span class='line'>
</span><span class='line'><span class="nf">server_test_</span><span class="p">()</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">{</span><span class="n">setup</span><span class="p">,</span> <span class="k">fun</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="nn">example_db</span><span class="p">:</span><span class="n">start_link</span><span class="p">()</span> <span class="k">end</span><span class="p">,</span>
</span><span class='line'>   <span class="k">fun</span><span class="p">(_</span><span class="nv">Pid</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nn">example_db</span><span class="p">:</span><span class="n">stop</span><span class="p">(_</span><span class="nv">Pid</span><span class="p">)</span> <span class="k">end</span><span class="p">,</span>
</span><span class='line'>   <span class="k">fun</span> <span class="n">generate_example_db_tests</span><span class="o">/</span><span class="mi">1</span><span class="p">}.</span>
</span><span class='line'>
</span><span class='line'><span class="nf">generate_example_db_tests</span><span class="p">(_</span><span class="nv">Pid</span><span class="p">)</span> <span class="o">-&gt;</span>
</span><span class='line'>  <span class="p">[</span>
</span><span class='line'>    <span class="no">?_assertEqual</span><span class="p">({</span><span class="n">ok</span><span class="p">,</span><span class="o">&lt;&lt;</span><span class="s">&quot;OK&quot;</span><span class="o">&gt;&gt;</span><span class="p">},</span> <span class="nn">example_db</span><span class="p">:</span><span class="n">save_script</span><span class="p">(</span><span class="s">&quot;jakub&quot;</span><span class="p">,</span> <span class="s">&quot;oboza&quot;</span><span class="p">,</span> <span class="o">&lt;&lt;</span><span class="s">&quot;yo dwang&quot;</span><span class="o">&gt;&gt;</span><span class="p">)</span> <span class="p">),</span>
</span><span class='line'>    <span class="no">?_assertEqual</span><span class="p">({</span><span class="n">ok</span><span class="p">,</span><span class="o">&lt;&lt;</span><span class="s">&quot;yo dwang&quot;</span><span class="o">&gt;&gt;</span><span class="p">},</span> <span class="nn">example_db</span><span class="p">:</span><span class="n">get_script</span><span class="p">(</span><span class="s">&quot;jakub&quot;</span><span class="p">,</span> <span class="s">&quot;oboza&quot;</span><span class="p">)</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">].</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span><span class="ni">endif</span>
</span></code></pre></td></tr></table></div></figure>


<p>TODO: explain this example
TODO: finish this post.</p>
]]></content>
  </entry>
  
</feed>
