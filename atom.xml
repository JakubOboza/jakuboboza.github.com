<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[No Fucking Idea]]></title>
  <link href="http://JakubOboza.github.com/atom.xml" rel="self"/>
  <link href="http://JakubOboza.github.com/"/>
  <updated>2012-03-26T21:36:19+01:00</updated>
  <id>http://JakubOboza.github.com/</id>
  <author>
    <name><![CDATA[Jakub Oboza]]></name>
    <email><![CDATA[jakub.oboza@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using eredis in erlang]]></title>
    <link href="http://JakubOboza.github.com/blog/2012/03/23/using-eredis-in-erlang/"/>
    <updated>2012-03-23T23:28:00+00:00</updated>
    <id>http://JakubOboza.github.com/blog/2012/03/23/using-eredis-in-erlang</id>
    <content type="html"><![CDATA[<p>Recently i decided to move my blog from tumblr to octopress becasue it is just easier for me to maintain it and it looks nicer. The old blog is under <a href="http://no-fucking-idea.tumblr.com">http://no-fucking-idea.tumblr.com</a>. My first post on enw blog is dedicated to using redis with erlang.</p>

<h1>Eredis</h1>

<p>Wooga created a really nice (performance driven) redis driver for erlang. You can get it here <a href="https://github.com/wooga/eredis">https://github.com/wooga/eredis</a>. It is really easy and nice.</p>

<h1>Initial sample</h1>

<p>On project page you can find simple examples how to use eredis. Examples there are all you need (but i need something for front page of my new blog so i will rewrite them and explain them :) ).</p>

<h2>First you need to start your eredis application</h2>

<figure class='code'><figcaption><span>initialization</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="nv">Client</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">start_link</span><span class="p">().</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Client is the &#8220;connection / state&#8221; we will be using with rest of queries.</p>

<p>To query things with redis we will use <code>q</code> method from eredis module which takes &#8220;Connection / Client&#8221; state and list with params.
This api is very simple here are two most basic examples of get and set.
GET:</p>

<figure class='code'><figcaption><span>get</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="o">&lt;&lt;</span><span class="s">&quot;OK&quot;</span><span class="o">&gt;&gt;</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">q</span><span class="p">(</span><span class="nv">Client</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;SET&quot;</span><span class="p">,</span> <span class="s">&quot;name&quot;</span><span class="p">,</span> <span class="s">&quot;kuba&quot;</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure>


<p>and SET:</p>

<figure class='code'><figcaption><span>set</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='erlang'><span class='line'><span class="p">{</span><span class="n">ok</span><span class="p">,</span> <span class="o">&lt;&lt;</span><span class="s">&quot;kuba&quot;</span><span class="o">&gt;&gt;</span><span class="p">}</span> <span class="o">=</span> <span class="nn">eredis</span><span class="p">:</span><span class="n">q</span><span class="p">(</span><span class="nv">Client</span><span class="p">,</span> <span class="p">[</span><span class="s">&quot;GET&quot;</span><span class="p">,</span> <span class="s">&quot;name&quot;</span><span class="p">]).</span>
</span></code></pre></td></tr></table></div></figure>


<p>From my point of view this is ideal candidate to be turned into gen_server behavior. We will pass &#8220;Connection / Client&#8221; as state and also we will build some &#8220;key&#8221; serialization methods around it to make it more durable and make our life easy if we will decide to refactor it later on.</p>

<h1>Free Api wrapper</h1>

<p>First thing i saw during development using Erlang is that you get free api if you follow simple patterns and encapsulate things into gen_server&#8217;s and applications.</p>

<p>TODO: finish this post.</p>
]]></content>
  </entry>
  
</feed>
